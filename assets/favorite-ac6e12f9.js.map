{"version":3,"file":"favorite-ac6e12f9.js","sources":["../../src/js/home.js","../../src/img/symbol-defs.svg","../../src/js/favorite.js"],"sourcesContent":["import axios from 'axios';\n\n// const buttonAddFavoritesEl = document.querySelector('.id-button-add-favorites');\n// console.log(buttonAddFavoritesEl);\n\n// import { getFilters } from './api';\n\n// //import { choiceFilter } from './api';\n// // console.log('home', choiceFilter);\n\n// //export let choiceFilter = 'filter=Muscles';\n\n// let choiceFilter = 'filter=Muscles';\n// let currentPage = 1;\n\n// const btnFiltersEl = document.querySelector('.js-exercises-list-btn');\n// const btnMusclesEl = document.querySelector(\n//   'button[data-action=\"filter=Muscles\"]',\n// );\n// const btnBodyEl = document.querySelector(\n//   'button[data-action=\"filter=Body parts\"]',\n// );\n// const btnEquipmentEl = document.querySelector(\n//   'button[data-action=\"filter=Equipment\"]',\n// );\n\n// btnFiltersEl.addEventListener('click', onChangeFilter);\n\n// function onChangeFilter(event) {\n//   btnMusclesEl.classList.remove('active');\n//   btnBodyEl.classList.remove('active');\n//   btnEquipmentEl.classList.remove('active');\n\n//   event.target.classList.add('active');\n\n//   choiceFilter = event.target.dataset.action;\n\n//   currentPage = 1;\n//   // return choiceFilter, currentPage;\n//   getFilters(choiceFilter, currentPage);\n// }\n\nconst quoteTextEl = document.querySelector('.quote-text');\nconst quoteAuthorEl = document.querySelector('.quote-author');\n\nexport async function getQuote() {\n  axios.defaults.baseURL = 'https://energyflow.b.goit.study/api/quote';\n\n  const date = new Date();\n  const currentDate =\n    date.getFullYear() + String(date.getMonth()) + date.getDate();\n\n  let objLocalStorage = {};\n  if (localStorage.getItem('quotation')) {\n    objLocalStorage = JSON.parse(localStorage.getItem('quotation'));\n  }\n\n  if (\n    !localStorage.getItem('quotation') ||\n    currentDate !== objLocalStorage.date\n  ) {\n    const response = await axios.get();\n    try {\n      quoteTextEl.textContent = response.data.quote;\n      quoteAuthorEl.textContent = response.data.author;\n      const settings = {\n        date: currentDate,\n        quote: response.data.quote,\n        author: response.data.author,\n      };\n      localStorage.setItem('quotation', JSON.stringify(settings));\n    } catch (error) {\n      alert(error.message);\n    }\n  } else {\n    quoteTextEl.textContent = objLocalStorage.quote;\n    quoteAuthorEl.textContent = objLocalStorage.author;\n  }\n}\n\ngetQuote();\n","export default \"__VITE_ASSET__903b04b1__\"","//import { createMarkupFavorites } from './markup';\nimport icons from '../img/symbol-defs.svg';\n\nimport { getQuote } from '../js/home';\n\nconst favoriteListEl = document.querySelector('.js-favorite-list');\n// const quoteTextEl = document.querySelector('.quote-text');\n// const quoteAuthorEl = document.querySelector('.quote-author');\n\n///////////////////\n\nconst quoteTextEl = document.querySelector('.quote-text');\nconst quoteAuthorEl = document.querySelector('.quote-author');\n\n// export async function getQuote() {\n//   axios.defaults.baseURL = 'https://energyflow.b.goit.study/api/quote';\n\n//   const date = new Date();\n//   const currentDate =\n//     date.getFullYear() + String(date.getMonth()) + date.getDate();\n\n//   let objLocalStorage = {};\n//   if (localStorage.getItem('quotation')) {\n//     objLocalStorage = JSON.parse(localStorage.getItem('quotation'));\n//   }\n\n//   if (\n//     !localStorage.getItem('quotation') ||\n//     currentDate !== objLocalStorage.date\n//   ) {\n//     const response = await axios.get();\n//     try {\n//       quoteTextEl.textContent = response.data.quote;\n//       quoteAuthorEl.textContent = response.data.author;\n//       const settings = {\n//         date: currentDate,\n//         quote: response.data.quote,\n//         author: response.data.author,\n//       };\n//       localStorage.setItem('quotation', JSON.stringify(settings));\n//     } catch (error) {\n//       alert(error.message);\n//     }\n//   } else {\n//     quoteTextEl.textContent = objLocalStorage.quote;\n//     quoteAuthorEl.textContent = objLocalStorage.author;\n//   }\n// }\n\ngetQuote();\n\ncreateMarkupFavorites();\n\nfunction createMarkupFavorites() {\n  const arrKeysStorage = [];\n  for (let i = 0; i < localStorage.length; i++) {\n    if (localStorage.key(i) !== 'quotation' && localStorage.key(i) !== '') {\n      arrKeysStorage.push(localStorage.key(i));\n    }\n  }\n  let markup = '';\n  if (arrKeysStorage.length > 0) {\n    for (let i = 0; i < arrKeysStorage.length; i++) {\n      let storegeData = JSON.parse(localStorage.getItem(arrKeysStorage[i]));\n      let name = storegeData.name;\n      let calories = storegeData.calories;\n      let bodyPart = storegeData.bodyPart;\n      let target = storegeData.target;\n      markup += `\n     <li class=\"second-item\">\n          <div class=\"second-position-one\">\n            <div class=\"second-flex\">\n              <p class=\"second-workout\">WORKOUT</p>\n              <div class=\"second-flex-one\">\n                <button type=\"button\" class=\"js-favorite-btn\" data-action='delete' data-id=${arrKeysStorage[i]}>\n                    <svg width=\"16\" height=\"16\" data-action='delete' data-id=${arrKeysStorage[i]}>\n                    <use href=\"${icons}#icon-trash\" data-action='delete' data-id=${arrKeysStorage[i]}></use>\n                    </svg>\n                </button>\n              </div>\n            </div>\n            <button type=\"button\" class=\"js-second-btn\" data-id=${arrKeysStorage[i]}>\n              Start\n              <svg class=\"second-arrow-icon\" width=\"14\" height=\"14\" data-id=${arrKeysStorage[i]}>\n                <use class=\"second-arrow-icon\" href=\"${icons}#icon-arrow\" data-id=${arrKeysStorage[i]}></use>\n              </svg>\n            </button>\n          </div>\n          <div class=\"second-position-two\">\n            <svg class=\"second-icon-man\" width=\"24\" height=\"24\">\n              <use href=\"${icons}#icon-running-man\"></use>\n            </svg>\n            <p class=\"second-title\">${name}</p>\n          </div>\n          <div class=\"second-position-three\">\n            <div>\n              <p class=\"second-text\">Burned calories:</p>\n              <p class=\"second-entrance\">${calories} / 3 min</p>\n            </div>\n            <div>\n              <p class=\"second-text\">Body part:</p>\n              <p class=\"second-entrance\">${bodyPart} </p>\n            </div>\n            <div>\n              <p class=\"second-text\">Target:</p>\n              <p class=\"second-entrance\">${target}</p>\n            </div>\n          </div>\n        </li>`;\n    }\n  } else {\n    markup = `<li class=\"exercises-item\">\n        <p class=\"message-undefined\">\n         It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.\n        </p>\n      </li>`;\n  }\n\n  favoriteListEl.innerHTML = markup;\n}\n\n// const favoriteBtnEl = document.querySelector('.js-favorite-btn');\n// console.log(favoriteBtnEl);\nfavoriteListEl.addEventListener('click', onFavoriteClick);\n\nfunction onFavoriteClick(event) {\n  console.dir(event.target.dataset.id);\n  if (!event.target.dataset.id) {\n    return;\n  }\n  // js-favorite-btn\n  console.log(event.target.className);\n  if (\n    event.target.className === 'js-favorite-btn' ||\n    event.target.dataset.action === 'delete'\n  ) {\n    const user = confirm(\n      'Are you sure that want to delete this exercise from a favourite?',\n    );\n    if (user) {\n      localStorage.removeItem(event.target.dataset.id);\n      createMarkupFavorites();\n    }\n  }\n}\n"],"names":["quoteTextEl","quoteAuthorEl","getQuote","axios","date","currentDate","objLocalStorage","response","settings","error","icons","favoriteListEl","createMarkupFavorites","arrKeysStorage","i","markup","storegeData","name","calories","bodyPart","target","onFavoriteClick","event"],"mappings":"+uBA0CA,MAAMA,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAgB,SAAS,cAAc,eAAe,EAErD,eAAeC,GAAW,CAC/BC,EAAM,SAAS,QAAU,4CAEzB,MAAMC,EAAO,IAAI,KACXC,EACJD,EAAK,YAAa,EAAG,OAAOA,EAAK,UAAU,EAAIA,EAAK,UAEtD,IAAIE,EAAkB,CAAA,EAKtB,GAJI,aAAa,QAAQ,WAAW,IAClCA,EAAkB,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAI9D,CAAC,aAAa,QAAQ,WAAW,GACjCD,IAAgBC,EAAgB,KAChC,CACA,MAAMC,EAAW,MAAMJ,EAAM,MAC7B,GAAI,CACFH,EAAY,YAAcO,EAAS,KAAK,MACxCN,EAAc,YAAcM,EAAS,KAAK,OAC1C,MAAMC,EAAW,CACf,KAAMH,EACN,MAAOE,EAAS,KAAK,MACrB,OAAQA,EAAS,KAAK,MAC9B,EACM,aAAa,QAAQ,YAAa,KAAK,UAAUC,CAAQ,CAAC,CAC3D,OAAQC,EAAP,CACA,MAAMA,EAAM,OAAO,CACpB,CACL,MACIT,EAAY,YAAcM,EAAgB,MAC1CL,EAAc,YAAcK,EAAgB,MAEhD,CAEAJ,EAAU,EChFV,MAAeQ,EAAA,+CCKTC,EAAiB,SAAS,cAAc,mBAAmB,EAM7C,SAAS,cAAc,aAAa,EAClC,SAAS,cAAc,eAAe,EAqC5DT,IAEAU,IAEA,SAASA,GAAwB,CAC/B,MAAMC,EAAiB,CAAA,EACvB,QAASC,EAAI,EAAGA,EAAI,aAAa,OAAQA,IACnC,aAAa,IAAIA,CAAC,IAAM,aAAe,aAAa,IAAIA,CAAC,IAAM,IACjED,EAAe,KAAK,aAAa,IAAIC,CAAC,CAAC,EAG3C,IAAIC,EAAS,GACb,GAAIF,EAAe,OAAS,EAC1B,QAASC,EAAI,EAAGA,EAAID,EAAe,OAAQC,IAAK,CAC9C,IAAIE,EAAc,KAAK,MAAM,aAAa,QAAQH,EAAeC,EAAE,CAAC,EAChEG,EAAOD,EAAY,KACnBE,EAAWF,EAAY,SACvBG,EAAWH,EAAY,SACvBI,EAASJ,EAAY,OACzBD,GAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAM6EF,EAAeC;AAAA,+EAC7BD,EAAeC;AAAA,iCAC7DJ,8CAAkDG,EAAeC;AAAA;AAAA;AAAA;AAAA;AAAA,kEAKhCD,EAAeC;AAAA;AAAA,8EAEHD,EAAeC;AAAA,uDACtCJ,yBAA6BG,EAAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAMxEJ;AAAA;AAAA,sCAEWO;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKKC;AAAA;AAAA;AAAA;AAAA,2CAIAC;AAAA;AAAA;AAAA;AAAA,2CAIAC;AAAA;AAAA;AAAA,cAItC,MAEDL,EAAS;AAAA;AAAA;AAAA;AAAA,aAOXJ,EAAe,UAAYI,CAC7B,CAIAJ,EAAe,iBAAiB,QAASU,CAAe,EAExD,SAASA,EAAgBC,EAAO,CAC9B,QAAQ,IAAIA,EAAM,OAAO,QAAQ,EAAE,EAC9BA,EAAM,OAAO,QAAQ,KAI1B,QAAQ,IAAIA,EAAM,OAAO,SAAS,GAEhCA,EAAM,OAAO,YAAc,mBAC3BA,EAAM,OAAO,QAAQ,SAAW,WAEnB,QACX,kEACN,IAEM,aAAa,WAAWA,EAAM,OAAO,QAAQ,EAAE,EAC/CV,KAGN"}